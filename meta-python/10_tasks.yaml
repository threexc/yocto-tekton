---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: meta-python-build
  namespace: tekton-pipelines
spec:
  results:
    - name: built
      description: Yes/No status of whether a build was done
  steps:
    - name: run-build
      image: registry.hub.docker.com/threexc/yocto-builder
      workingDir: /workspace
      script: |
        #!/bin/bash
        cd poky && source oe-init-build-env build
        export LANG=en_US.UTF-8

        # Get the latest python recipe changes and bitbake them using --diff-filter for Added (A), Copied (C), 
        # Modified (M), or Renamed (R) files. The filter character lines will always start with an upper-case 
        # letter (commit hashes don't use them). Also ignore deleted files (D flag to --diff-filter)
        COMMIT_LOG="$(cd ../../meta-openembedded && git log --name-status --oneline --grep="python" origin/master..origin/master-next --find-renames --diff-filter=ACMR | grep "^[A-Z]" | grep python)"
        RECIPE_NAME=""
        RECIPE_LIST=""

        # Exit cleanly if there is no difference between master and master-next
        if [ -z "${COMMIT_LOG}" ]; then
            echo "No difference between master and master-next branches. Exiting..."
            echo -n "No" | tee $(results.built.path);
            exit 0
        fi
        
        # Read line-by-line from $COMMIT_LOG, and get the recipe filenames. Make sure to handle the case where
        # --diff-filter shows three words (e.g. when a version upgrade is made, it shows the diff-filter flag, 
        # the old filename, and the new filename
        while read -r line
        do
            LINE_LENGTH=$(echo "$line" | wc -w)
            if [ "$LINE_LENGTH" = "3" ]; then
                RECIPE_NAME=$(echo "$line" | awk '{print $3}' | awk -F/ '{print $NF}' | sed 's/_.*//' | sed 's/\..*//')
            elif [ "$LINE_LENGTH" = "2" ]; then
                RECIPE_NAME=$(echo "$line" | awk '{print $2}' | awk -F/ '{print $NF}' | sed 's/_.*//' | sed 's/\..*//')
            else
                echo "Something went wrong."
            fi
            
            # Handle the case where a .inc file was modified, and the "recipe" it reports is e.g. python-grpcio-tools
            # instead of python3-grpcio-tools. Do this by splitting the recipe string on the first hyphen and adding
            # at the end of the prefix, before re-combining
            if [ $? -eq 1 ]; then
                PREFIX=$(echo "$RECIPE_NAME" | cut -d'-' -f1)
                SUFFIX=$(echo "$RECIPE_NAME" | cut -d'-' -f2)
                RECIPE_NAME="${PREFIX}3-${SUFFIX}"
            fi

            # Make sure what we've parsed is actually a python recipe.
            # If (and only if) it is, then add it to RECIPE_LIST
            PYTHON_CHECK=$(echo "$RECIPE_NAME" | grep python3)
            if [ $? -eq 0 ]; then
                RECIPE_LIST+="${RECIPE_NAME} "
            fi

        done < <(printf '%s\n' "$COMMIT_LOG")

        IMAGE_TARGET="core-image-full-cmdline"

        echo "IMAGE_INSTALL_append = \" ${RECIPE_LIST}\"" >> conf/local.conf
        echo $IMAGE_TARGET | xargs bitbake
        echo "The following list was sent to bitbake: "
        echo "${RECIPE_LIST}"
        echo -n "Yes" | tee $(results.built.path);
      volumeMounts:
      - name: meta-python-pvc
        mountPath: /workspace
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: meta-python-ptest
  namespace: tekton-pipelines
spec:
  steps:
    - name: run-ptest
      image: registry.hub.docker.com/threexc/yocto-builder
      securityContext:
        privileged: true
      workingDir: /workspace
      script: |
        #!/bin/bash
        cd poky && source oe-init-build-env build
        export LANG=en_US.UTF-8
        runqemu slirp nographic qemuparams="-m 8192 -net user,hostfwd=tcp::2222-:22"
      volumeMounts:
      - name: meta-python-pvc
        mountPath: /workspace
  sidecars:
    - name: run-ptest
      image: registry.hub.docker.com/threexc/yocto-builder
      securityContext:
        privileged: true
      workingDir: /workspace
      script: |
        #!/bin/bash
        echo "Giving the VM time to boot..."
        sleep 60
        ssh -p 2222 root@10.0.2.15 "ptest-runner 2>&1" > ptest.log
      volumeMounts:
      - name: meta-python-pvc
        mountPath: /workspace
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: meta-python-setup-workspace
  namespace: tekton-pipelines
spec:
  steps:
    - name: clear-old-workspace
      image: registry.hub.docker.com/threexc/yocto-builder
      workingDir: /workspace
      script: |
        #!/bin/bash -xe
        if [ -d "poky/build/tmp" ]; then
            rm -rf poky/build/tmp
        fi
      volumeMounts:
      - name: meta-python-pvc
        mountPath: /workspace
    - name: create-workspace
      image: registry.hub.docker.com/threexc/yocto-builder
      workingDir: /workspace
      script: |
        #!/bin/bash -xe
        if [ ! -d "poky" ]; then
            git clone git://git.yoctoproject.org/poky
        fi

        if [ ! -d "meta-openembedded" ]; then
            git clone git://git.openembedded.org/meta-openembedded
        fi
        
        if [ ! -d "logs/qemux86-64" ]; then
            mkdir -p logs/qemux86-64
        fi
      volumeMounts:
      - name: meta-python-pvc
        mountPath: /workspace

    - name: update-workspace
      image: registry.hub.docker.com/threexc/yocto-builder
      workingDir: /workspace
      script: |
        #!/bin/bash -xe
        (cd poky && git checkout master && git pull --rebase)
        (cd meta-openembedded && git checkout master-next && git pull --rebase)
      volumeMounts:
      - name: meta-python-pvc
        mountPath: /workspace
    - name: setup-conf
      image: registry.hub.docker.com/threexc/yocto-builder
      workingDir: /workspace
      script: |
        #!/bin/bash -xe
        if [ ! -d poky/build/conf/ ]; then
          cd poky && source oe-init-build-env build
          echo "BBLAYERS ?= \" \\
                  /workspace/poky/meta \\
                  /workspace/poky/meta-poky \\
                  /workspace/poky/meta-yocto-bsp \\
                  /workspace/meta-openembedded/meta-python \\
                  /workspace/meta-openembedded/meta-oe \\
                  /workspace/meta-openembedded/meta-networking \\
                  /workspace/meta-openembedded/meta-filesystems \\
                  /workspace/meta-openembedded/meta-webserver \\
                  \"" > conf/bblayers.conf
          echo "SSTATE_MIRRORS = \"file://.* http://yocto-sstate.tekton-pipelines/poky/build/sstate-cache/PATH\"" >> conf/local.conf
          echo "USER_CLASSES += \"buildstats buildstats-summary\"" >> conf/local.conf
          echo "DISTRO_FEATURES_append = \" systemd pam\"" >> conf/local.conf
          echo "DISTRO_FEATURES_BACKFILL_CONSIDERED += \"sysvinit\"" >> conf/local.conf
          echo "VIRTUAL-RUNTIME_init_manager = \"systemd\"" >> conf/local.conf
          echo "VIRTUAL-RUNTIME_initscripts = \"systemd-compat-units\"" >> conf/local.conf
          echo "INHERIT += \" testimage\"" >> conf/local.conf
          echo "QEMU_USE_SLIRP = \"1\"" >> conf/local.conf
        fi
      volumeMounts:
      - name: meta-python-pvc
        mountPath: /workspace

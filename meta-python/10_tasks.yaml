---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: meta-python-build
  namespace: tekton-pipelines
spec:
  steps:
    - name: setup-workspace
      image: registry.hub.docker.com/threexc/yocto-builder
      workingDir: /workspace
      script: |
        #!/bin/bash -xe
        if [ -d "poky/build/tmp" ]; then
            echo "Clearing old build outputs..."
            rm -rf poky/build/tmp
        fi

        if [ ! -d "poky" ]; then
            echo "Cloning poky repo..."
            git clone git://git.yoctoproject.org/poky
        fi

        if [ ! -d "meta-openembedded" ]; then
            echo "Cloning meta-openembedded repo..."
            git clone git://git.openembedded.org/meta-openembedded
        fi

        if [ ! -d "yocto-tekton" ]; then
            echo "Cloning yocto-tekton repo..."
            git clone https://github.com/threexc/yocto-tekton.git
        fi
      volumeMounts:
      - name: build
        mountPath: /workspace

    - name: update-repos
      image: registry.hub.docker.com/threexc/yocto-builder
      workingDir: /workspace
      script: |
        #!/bin/bash -xe
        echo "Rebasing poky to latest master..."
        (cd poky && git checkout master && git pull --rebase)

        echo "Rebasing meta-openembedded to latest master-next..."
        (cd meta-openembedded && git checkout master-next && git pull --rebase)

        echo "Rebasing yocto-tekton to latest master..."
        (cd yocto-tekton && git pull --rebase && git checkout main)
      volumeMounts:
      - name: build
        mountPath: /workspace

    - name: setup-conf
      image: registry.hub.docker.com/threexc/yocto-builder
      workingDir: /workspace
      script: |
        #!/bin/bash -xe
        if [ ! -d poky/build/conf/ ]; then
          cd poky && source oe-init-build-env build
          echo "BBLAYERS ?= \" \\
                  /workspace/poky/meta \\
                  /workspace/poky/meta-poky \\
                  /workspace/poky/meta-yocto-bsp \\
                  /workspace/meta-openembedded/meta-python \\
                  /workspace/meta-openembedded/meta-oe \\
                  /workspace/meta-openembedded/meta-networking \\
                  /workspace/meta-openembedded/meta-filesystems \\
                  /workspace/meta-openembedded/meta-webserver \\
                  \"" > conf/bblayers.conf
          # Add required elements to local.conf for ptest image build
          echo "IMAGE_FSTYPES = \"container\"" >> conf/local.conf
          echo "DISTRO_FEATURES_append = \" ptest\"" >> conf/local.conf
          echo "PREFERRED_PROVIDER_virtual/kernel = \"linux-dummy\"" >> conf/local.conf
          echo "DISTRO_FEATURES_append = \" ptest systemd pam\"" >> conf/local.conf
          echo "FORTRAN_forcevariable = \",fortran\"" >> conf/local.conf
        fi
      volumeMounts:
      - name: build
        mountPath: /workspace

    - name: build-patches
      image: registry.hub.docker.com/threexc/yocto-builder
      workingDir: /workspace
      script: |
        #!/bin/bash
        # Add yocto-tekton repo to PATH
        export PATH="/workspace/yocto-tekton/meta-python/scripts:$PATH"
        # Get the latest python recipe changes and bitbake them using --diff-filter for Added (A), Copied (C), 
        # Modified (M), or Renamed (R) files. The filter character lines will always start with an upper-case 
        # letter (commit hashes don't use them). Also ignore deleted files (D flag to --diff-filter)
        COMMIT_LOG="$(get-recipe-changes.sh)"

        # Exit cleanly if there is no difference between master and master-next
        if [ -z "${COMMIT_LOG}" ]; then
            echo "No difference between master and master-next branches. Exiting..."
            exit 0
        fi
        
        RECIPE_NAME=""
        RECIPE_LIST=""

        cd poky && source oe-init-build-env build
        export LANG=en_US.UTF-8

        # Read line-by-line from $COMMIT_LOG, and get the recipe filenames. Make sure to handle the case where
        # --diff-filter shows three words (e.g. when a version upgrade is made, it shows the diff-filter flag, 
        # the old filename, and the new filename
        while read -r line
        do
            LINE_LENGTH=$(echo "$line" | wc -w)
            if [ "$LINE_LENGTH" = "3" ]; then
                RECIPE_NAME=$(echo "$line" | awk '{print $3}' | awk -F/ '{print $NF}' | sed 's/_.*//' | sed 's/\..*//')
            elif [ "$LINE_LENGTH" = "2" ]; then
                RECIPE_NAME=$(echo "$line" | awk '{print $2}' | awk -F/ '{print $NF}' | sed 's/_.*//' | sed 's/\..*//')
            else
                echo "Something went wrong."
            fi
            
            # Handle the case where a .inc file was modified, and the "recipe" it reports is e.g. python-grpcio-tools
            # instead of python3-grpcio-tools. Do this by splitting the recipe string on the first hyphen and adding
            # at the end of the prefix, before re-combining
            if [ $? -eq 1 ]; then
                PREFIX=$(echo "$RECIPE_NAME" | cut -d'-' -f1)
                SUFFIX=$(echo "$RECIPE_NAME" | cut -d'-' -f2)
                RECIPE_NAME="${PREFIX}3-${SUFFIX}"
            fi

            # Make sure what we've parsed is actually a python recipe.
            # If (and only if) it is, then add it to RECIPE_LIST
            PYTHON_CHECK=$(echo "$RECIPE_NAME" | grep "python3")
            if [ "$?" -eq 0 ]; then
                RECIPE_LIST+="${RECIPE_NAME} "
            fi
        done < <(printf '%s\n' "$COMMIT_LOG")

        echo ${RECIPE_LIST} | xargs bitbake
        echo "The following list was sent to bitbake: "
        echo "${RECIPE_LIST}"
      volumeMounts:
      - name: build
        mountPath: /workspace

    - name: build-ptest-image
      image: registry.hub.docker.com/threexc/yocto-builder
      workingDir: /workspace
      script: |
        #!/bin/bash
        # Add yocto-tekton repo to PATH
        export PATH="/workspace/yocto-tekton/meta-python/scripts:$PATH"

        # Move into poky directory, remove old conf, source build
        cd poky && source oe-init-build-env build
        export LANG=en_US.UTF-8
        
        bitbake meta-python-ptest-image
        bunzip2 -c /workspace/poky/build/tmp/deploy/images/qemux86-64/meta-python-ptest-image-qemux86-64.tar.bz2 | gzip -c > /workspace/poky/build/tmp/deploy/images/qemux86-64/meta-python-ptest-image-qemux86-64.tar.gz
        echo "FROM scratch" > /workspace/poky/build/tmp/deploy/images/qemux86-64/Dockerfile
        echo "ADD meta-python-ptest-image-qemux86-64.tar.gz /" >> /workspace/poky/build/tmp/deploy/images/qemux86-64/Dockerfile
      volumeMounts:
      - name: build
        mountPath: /workspace
    - name: build-and-push-ptest-container
      image: gcr.io/kaniko-project/executor:latest
      command:
      - /kaniko/executor
      args:
      - --destination=yow-tgamblin-fedora2:31320/meta-python-ptest-image:latest
      - --context=dir:///workspace/poky/build/tmp/deploy/images/qemux86-64/
      - --dockerfile=/workspace/poky/build/tmp/deploy/images/qemux86-64/Dockerfile
      - --skip-tls-verify
      volumeMounts:
      - name: build
        mountPath: /workspace
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: meta-python-run-ptest
  namespace: tekton-pipelines
spec:
  steps:
    - name: run-ptest
      image: yow-tgamblin-fedora2:31320/meta-python-ptest-image:latest
      command:
      - ptest-runner
